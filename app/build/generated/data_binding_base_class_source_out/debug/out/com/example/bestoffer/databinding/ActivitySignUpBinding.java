// Generated by view binder compiler. Do not edit!
package com.example.bestoffer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.bestoffer.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText AddressET;

  @NonNull
  public final TextInputLayout AddressIL;

  @NonNull
  public final TextInputLayout NameIL;

  @NonNull
  public final TextInputEditText PhoneET;

  @NonNull
  public final TextInputLayout PhoneIL;

  @NonNull
  public final ImageView appLogo;

  @NonNull
  public final TextInputEditText confirmPasswordET;

  @NonNull
  public final TextInputLayout confirmPasswordTI;

  @NonNull
  public final TextInputEditText emailET;

  @NonNull
  public final TextInputLayout emailIL;

  @NonNull
  public final ProgressBar loadingPb;

  @NonNull
  public final ConstraintLayout loadingView;

  @NonNull
  public final View loadingViewBackground;

  @NonNull
  public final TextInputEditText nameET;

  @NonNull
  public final TextInputEditText passwordET;

  @NonNull
  public final TextInputLayout passwordTI;

  @NonNull
  public final MaterialButton signUpBtn;

  @NonNull
  public final MaterialButton typeCompanyBtn;

  @NonNull
  public final MaterialButton typeUserBtn;

  @NonNull
  public final MaterialButtonToggleGroup userTypeToggle;

  private ActivitySignUpBinding(@NonNull ScrollView rootView, @NonNull TextInputEditText AddressET,
      @NonNull TextInputLayout AddressIL, @NonNull TextInputLayout NameIL,
      @NonNull TextInputEditText PhoneET, @NonNull TextInputLayout PhoneIL,
      @NonNull ImageView appLogo, @NonNull TextInputEditText confirmPasswordET,
      @NonNull TextInputLayout confirmPasswordTI, @NonNull TextInputEditText emailET,
      @NonNull TextInputLayout emailIL, @NonNull ProgressBar loadingPb,
      @NonNull ConstraintLayout loadingView, @NonNull View loadingViewBackground,
      @NonNull TextInputEditText nameET, @NonNull TextInputEditText passwordET,
      @NonNull TextInputLayout passwordTI, @NonNull MaterialButton signUpBtn,
      @NonNull MaterialButton typeCompanyBtn, @NonNull MaterialButton typeUserBtn,
      @NonNull MaterialButtonToggleGroup userTypeToggle) {
    this.rootView = rootView;
    this.AddressET = AddressET;
    this.AddressIL = AddressIL;
    this.NameIL = NameIL;
    this.PhoneET = PhoneET;
    this.PhoneIL = PhoneIL;
    this.appLogo = appLogo;
    this.confirmPasswordET = confirmPasswordET;
    this.confirmPasswordTI = confirmPasswordTI;
    this.emailET = emailET;
    this.emailIL = emailIL;
    this.loadingPb = loadingPb;
    this.loadingView = loadingView;
    this.loadingViewBackground = loadingViewBackground;
    this.nameET = nameET;
    this.passwordET = passwordET;
    this.passwordTI = passwordTI;
    this.signUpBtn = signUpBtn;
    this.typeCompanyBtn = typeCompanyBtn;
    this.typeUserBtn = typeUserBtn;
    this.userTypeToggle = userTypeToggle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AddressET;
      TextInputEditText AddressET = rootView.findViewById(id);
      if (AddressET == null) {
        break missingId;
      }

      id = R.id.AddressIL;
      TextInputLayout AddressIL = rootView.findViewById(id);
      if (AddressIL == null) {
        break missingId;
      }

      id = R.id.NameIL;
      TextInputLayout NameIL = rootView.findViewById(id);
      if (NameIL == null) {
        break missingId;
      }

      id = R.id.PhoneET;
      TextInputEditText PhoneET = rootView.findViewById(id);
      if (PhoneET == null) {
        break missingId;
      }

      id = R.id.PhoneIL;
      TextInputLayout PhoneIL = rootView.findViewById(id);
      if (PhoneIL == null) {
        break missingId;
      }

      id = R.id.app_logo;
      ImageView appLogo = rootView.findViewById(id);
      if (appLogo == null) {
        break missingId;
      }

      id = R.id.confirmPasswordET;
      TextInputEditText confirmPasswordET = rootView.findViewById(id);
      if (confirmPasswordET == null) {
        break missingId;
      }

      id = R.id.confirmPasswordTI;
      TextInputLayout confirmPasswordTI = rootView.findViewById(id);
      if (confirmPasswordTI == null) {
        break missingId;
      }

      id = R.id.emailET;
      TextInputEditText emailET = rootView.findViewById(id);
      if (emailET == null) {
        break missingId;
      }

      id = R.id.emailIL;
      TextInputLayout emailIL = rootView.findViewById(id);
      if (emailIL == null) {
        break missingId;
      }

      id = R.id.loadingPb;
      ProgressBar loadingPb = rootView.findViewById(id);
      if (loadingPb == null) {
        break missingId;
      }

      id = R.id.loadingView;
      ConstraintLayout loadingView = rootView.findViewById(id);
      if (loadingView == null) {
        break missingId;
      }

      id = R.id.loadingViewBackground;
      View loadingViewBackground = rootView.findViewById(id);
      if (loadingViewBackground == null) {
        break missingId;
      }

      id = R.id.nameET;
      TextInputEditText nameET = rootView.findViewById(id);
      if (nameET == null) {
        break missingId;
      }

      id = R.id.passwordET;
      TextInputEditText passwordET = rootView.findViewById(id);
      if (passwordET == null) {
        break missingId;
      }

      id = R.id.passwordTI;
      TextInputLayout passwordTI = rootView.findViewById(id);
      if (passwordTI == null) {
        break missingId;
      }

      id = R.id.signUpBtn;
      MaterialButton signUpBtn = rootView.findViewById(id);
      if (signUpBtn == null) {
        break missingId;
      }

      id = R.id.typeCompanyBtn;
      MaterialButton typeCompanyBtn = rootView.findViewById(id);
      if (typeCompanyBtn == null) {
        break missingId;
      }

      id = R.id.typeUserBtn;
      MaterialButton typeUserBtn = rootView.findViewById(id);
      if (typeUserBtn == null) {
        break missingId;
      }

      id = R.id.userTypeToggle;
      MaterialButtonToggleGroup userTypeToggle = rootView.findViewById(id);
      if (userTypeToggle == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((ScrollView) rootView, AddressET, AddressIL, NameIL, PhoneET,
          PhoneIL, appLogo, confirmPasswordET, confirmPasswordTI, emailET, emailIL, loadingPb,
          loadingView, loadingViewBackground, nameET, passwordET, passwordTI, signUpBtn,
          typeCompanyBtn, typeUserBtn, userTypeToggle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
